#!/usr/bin/env python3
import argparse
import random
import colorama
from colorama import Fore
import pyxploitdb

colorama.init(autoreset=True) 

class Decorator:
    @staticmethod
    def random_banner():
        try:
            colors = [Fore.YELLOW, Fore.RED, Fore.BLUE]
            color = random.choice(colors)
            print(color)
            banner_file = random.choice(["banner/ban1.txt", "banner/ban2.txt", "banner/ban3.txt"])
            with open(banner_file, 'r') as file:
                print(file.read())
        except IOError as e:
            print(f"Error displaying banner: {e}")

    @staticmethod
    def author_info():
        print(Fore.GREEN + "author: " + Fore.YELLOW + "DigitalNinja00")
        print(Fore.GREEN + "github: " + Fore.YELLOW + "https://github.com/DigitalNinja00")
        print(Fore.RESET + "This script uses the exploit database API")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="OPTIONS FOR SEARCH EXPLOIT")
    parser.add_argument("-s", "--search", help="example: ./setup.py -s CVE-2021-4034")
    args = parser.parse_args()

    if args.search:
        Decorator.random_banner()
        Decorator.author_info()
        print("")
        try:
            log = pyxploitdb.searchCVE(args.search)
            for key, value in log.items():
                print(f"{Fore.RED}:{Fore.YELLOW}{key}")
                print(f"{Fore.RED}{value}")
        except pyxploitdb.ApiError as e:
            print(f"Error fetching CVE details: {e}")

